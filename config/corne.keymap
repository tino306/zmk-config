/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


/* the keyboard is supposed to be used with a finnish layout in the os
 * us to finnish mappings: 
 * , -> , and ;
 * . -> . and :
 * / -> - and _
 * ; -> ä and Ä
 * ' -> ö and Ö
 */

/ {
        // define combos for switching between mac and win layers
        combos {
                compatible = "zmk,combos";
                combo_to_win {
                        timeout-ms = <100>;
                        key-positions = <0 1>;
                        bindings = <&to 3>;
                };
                combo_to_mac {
                        timeout-ms = <100>;
                        key-positions = <2 3>;
                        bindings = <&to 0>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                // 0 1 2 layers for mac os keybindings
                mac_default { // layer 0
                        bindings = <
   &kp ESC   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp TAB   &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT

            &kp LCTRL &kp LGUI &lt 1 SPACE   &lt 2 RET &kp LGUI &kp RALT
                        >;
                };

                mac_lower { // layer 1
                        bindings = <
   &kp RS(RA(N7)) &kp N1         &kp N2     &kp N3         &kp N4         &kp N5
   &kp N6         &kp N7         &kp N8     &kp N9         &kp N0         &kp MINUS
   &kp RA(RBKT)   &kp RS(N1)     &kp RS(N2) &kp RS(N3)     &kp RA(N4)     &kp RS(N5)
   &kp RS(N6)     &kp RS(N7)     &kp RS(N8) &kp RS(N9)     &kp RS(N0)     &kp RS(MINUS)
   &kp GRAVE      &kp RS(GRAVE)  &kp RA(N2) &kp RS(RA(N7)) &kp RS(N4)     &kp BSLH
   &kp RS(RBKT)   &kp RS(RA(N8)) &kp RA(N8) &kp RA(N9)     &kp RS(RA(N9)) &kp RS(BSLH)

   &trans &trans &trans  &trans &trans &trans
                        >;
                };

                mac_raise { // layer 2
                        bindings = <
   &kp F1    &kp F2       &kp F3       &kp F4       &kp F5         &kp F6
   &kp F7    &kp F8       &kp F9       &kp F10      &kp F11        &kp INS
   &trans    &trans       &kp C_MUTE   &kp C_VOL_DN &kp C_VOL_UP   &trans
   &kp LEFT  &kp DOWN     &kp UP       &kp RIGHT    &kp EQUAL      &kp RS(EQUAL)
   &trans    &bt BT_CLR   &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0   &trans
   &kp PSCRN &kp C_BRI_DN &kp C_BRI_UP &trans       &trans         &trans

   &trans &trans &trans  &trans &trans &trans
                        >;
                };

                // 3 4 5 layers for mac os keybindings
                win_default { // layer 3
                        bindings = <
   &kp ESC   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp TAB   &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT

            &kp LGUI &kp LCTRL &lt 4 SPACE   &lt 5 RET &kp RCTRL &kp LALT
                        >;
                };

                win_lower { // layer 4
                        bindings = <
   &kp RA(MINUS)  &kp N1         &kp N2     &kp N3         &kp N4         &kp N5
   &kp N6         &kp N7         &kp N8     &kp N9         &kp N0         &kp MINUS
   &kp RA(RBKT)   &kp RS(N1)     &kp RS(N2) &kp RS(N3)     &kp RA(N4)     &kp RS(N5)
   &kp RS(N6)     &kp RS(N7)     &kp RS(N8) &kp RS(N9)     &kp RS(N0)     &kp RS(MINUS)
   &kp NUBS       &kp RS(NUBS)   &kp RA(N2) &kp RA(NUBS)   &kp RA(N5)     &kp BSLH
   &kp RS(RBKT)   &kp RA(N7)     &kp RA(N8) &kp RA(N9)     &kp RA(N0)     &kp RS(BSLH)

   &trans &trans &trans  &trans &trans &trans
                        >;
                };

                win_raise { // layer 5
                        bindings = <
   &kp F1    &kp F2       &kp F3       &kp F4       &kp F5         &kp F6
   &kp F7    &kp F8       &kp F9       &kp F10      &kp F11        &kp INS
   &trans    &trans       &kp C_MUTE   &kp C_VOL_DN &kp C_VOL_UP   &trans
   &kp LEFT  &kp DOWN     &kp UP       &kp RIGHT    &kp EQUAL      &kp RS(EQUAL)
   &trans    &bt BT_CLR   &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0   &trans
   &kp PSCRN &kp C_BRI_DN &kp C_BRI_UP &trans       &trans         &trans

   &trans &trans &trans  &trans &trans &trans
                        >;
                };
        };
};
